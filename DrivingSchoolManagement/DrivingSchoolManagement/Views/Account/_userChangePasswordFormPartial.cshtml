@using DrivingSchoolManagement.ViewModels;
@using System.Drawing;
@model UserPasswordChangeViewModel
@{
    Layout = null;
}

@using (Html.BeginForm("CheckProvidedPasswordData", "Account"))
{
@Html.DevExpress().FormLayout(fl =>
{
    fl.Width = Unit.Percentage(25);
    fl.AlignItemCaptionsInAllGroups = true;
    fl.Name = "PasswordChangeFormLayout";
    fl.Items.AddGroupItem(g =>
    {
        g.Caption = "Zmień hasło";
        g.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;

        g.Items.Add(m => m.OldPassword, i =>
        {
            i.Caption = "Aktualne hasło";
            i.NestedExtensionSettings.Width = Unit.Percentage(100);
            i.RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
            i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
            i.NestedExtension().TextBox(s =>
            {
                s.Properties.ValidationSettings.RequiredField.IsRequired = true;
                s.Properties.ValidationSettings.Display = Display.Dynamic;
                s.Properties.Password = true;
            });
        });
        g.Items.Add(m => m.NewPassword, i =>
        {
            i.Caption = "Nowe hasło";
            i.NestedExtensionSettings.Width = Unit.Percentage(100);
            i.RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
            i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
            i.NestedExtension().TextBox(s =>
            {
                s.Properties.ValidationSettings.RequiredField.IsRequired = true;
                s.Properties.ValidationSettings.Display = Display.Dynamic;
                s.Properties.Password = true;
                s.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^(?=.*[A-Z*])(?=.*[0-9*]).{6,}$";
                s.Properties.ValidationSettings.RegularExpression.ErrorText = "Hasło nie spełnia wymogów!";
            });
        });
        g.Items.Add(m => m.NewPasswordConfirmation, i =>
        {
            i.Caption = "Powtórz nowe hasło";
            i.HelpText = "Hasło musi posiadać przynajmniej jedną dużą literę oraz jedną cyfrę, minimalna długość to 6 znaków.";
            i.NestedExtensionSettings.Width = Unit.Percentage(100);
            i.RequiredMarkDisplayMode = FieldRequiredMarkMode.Required;
            i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
            i.NestedExtension().TextBox(s =>
            {
                s.Properties.ValidationSettings.RequiredField.IsRequired = true;
                s.Properties.ValidationSettings.Display = Display.Dynamic;
                s.Properties.Password = true;
                s.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"^(?=.*[A-Z*])(?=.*[0-9*]).{6,}$";
                s.Properties.ValidationSettings.RegularExpression.ErrorText = "Hasło nie spełnia wymogów!";
            });
        });
        g.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
            i.Paddings.PaddingTop = 5;
            i.NestedExtension().Label(lb =>
            {
                lb.Name = "errorLabel";
                lb.ControlStyle.ForeColor = Color.Red;
            });
        });
        g.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
            i.Paddings.PaddingTop = 10;
            i.NestedExtension().Button(s =>
            {
                s.Name = "ChangePasswordButton";
                s.Text = "Zapisz";
                s.UseSubmitBehavior = false;
                s.ClientSideEvents.Click = "function(s,e) {ChangePasswordButtonClick();}";
            });
        });
    });
}).Bind(Model).GetHtml()

}